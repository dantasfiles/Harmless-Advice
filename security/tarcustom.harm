(object sys = [
	openW:file = x.y:string.
		if (x.exi (y)) 
		then (x.openO (y)) 
		else (x.openC (y)), 
	openA:file = x.y:string.
		(openappend y),
	openR:file = x.y:string.
		(openread y),
	del:unit = x.y:string.
		(delete y),
	ren:unit = x.y:(string*string).
		split (f1, f2) = y in 
		(if (x.exi (f2)) 
		then (x.renR (y)) 
		else (x.renN (y))),	
	wri:int = x.y:(file * string).
		(write y),
	rea:string = x.y:(file * int).
		(read y),
	exi:bool = x.y:(string).
		(exists y),
	openO:file = x.y:string.
		(openwrite y),
	openC:file = x.y:string.
		(openwrite y),
	renR:unit = x.y:(string*string).
		(rename y),
	renN:unit = x.y:(string*string).
		(rename y),
	sockA:sock = x.y:unit.
		(socketactive y),
	sockP:sock = x.y:unit.
		(socketpassive y),
	bin:unit = x.y:(sock * string * int).
		(bind y),
	lis:unit = x.y:(sock * int).
		(listen y),
	acc:(sock * string * int) = x.y:sock.
		(accept y),
	con:unit = x.y:(sock * string * int).
		(connect y),
	sen:int = x.y:(sock * string).
		(send y),
	rec:string = x.y:(sock * int).
		(recv y)
	])

in

allowedread:{

(string restrictedfile = "tests/test.txt")

(before {sys.openR} (x,y,s,n) = 
	if (y == restrictedfile) 
	then ()
	else ((print ("Attempt to read file " ^ y ^ "\n")); 
		(abort ())))

}

taroverwrite:{

(before {sys.openO} (x,y,s,n) =
	if ((substring (y, lastindexof (y, ".") + 1, 3)) == "tar")
	then ()
	else ((print ("Attempt to overwrite file " ^ y ^ "\n")); 
		(abort ())))

(before {sys.renR} (x,y,s,n) =
	(split (f1, f2) = y in
	((print ("Attempt to overwrite file " ^ f2 ^ "\n"));
		(abort ()))))

}


limitwritetoread:{

(ref bytesread:int = 0)

(ref byteswritten:int = 0)

(before {sys.wri} (x,y, st, name) = 
	(split (f, s) = y in
	(if (((!byteswritten) + (size s)) > (!bytesread)) 
	then ((print "Attempt to write more than read..\n");
		(abort ())) 
	else ())))

(after {sys.wri} (x,y, st, name) = 
	((byteswritten := ((!byteswritten) + y));()))

(after {sys.rea} (x,y, st, name) = 
	((bytesread := ((!bytesread) + (size y)));()))
}


nonetwork:{

(before {sys.sockA, sys.sockP} (x,y,s,n) =
	((print ("Attempt to use network...\n")); 
			(abort ())))

(before {sys.bin, sys.con} (x,y,s,n) =
	((print ("Attempt to use network...\n")); 
		(abort ())))

(before {sys.lis} (x,y,s,n) =
	((print ("Attempt to use network...\n")); 
		(abort ())))

(before {sys.acc} (x,y,s,n) =
	((print ("Attempt to use network...\n")); 
		(abort ())))

(before {sys.sen} (x,y,s,n) =
	((print ("Attempt to use network...\n")); 
		(abort ())))

(before {sys.rec} (x,y,s,n) =
	((print ("Attempt to use network...\n")); 
		(abort ())))

}


in 

(let 
	(file f1 = sys.openR ("tests/test.txt"))
	(file f2 = sys.openW ("tests/out.tar"))
in
	(sys.wri ((f2, (sys.rea ((f1, 5)))));
	(print ("Wrote first chunk"));
	(sys.wri ((f2, (sys.rea ((f1, 4)) ^ "e")))))
)